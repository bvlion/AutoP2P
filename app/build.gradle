plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.android.gms.oss-licenses-plugin'
    id 'com.google.firebase.appdistribution'
    id 'com.github.triplet.play' version '3.7.0'
}

android {
    compileSdk 31
    apply from: '../dependencies/signing.gradle', to: android
    def globalConfiguration = rootProject.extensions.getByName("ext")

    defaultConfig {
        applicationId "net.ambitious.android.autop2p"
        minSdk 21
        targetSdk 31
        versionCode globalConfiguration["appVersionCode"]
        versionName globalConfiguration["appVersionName"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        manifestPlaceholders = [
            admob_key: globalConfiguration["adMobCode"]
        ]
    }

    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            signingConfig signingConfigs.debug
            buildConfigField "String", "AD_MOB_KEY", "\"" + globalConfiguration["adMobKey"] + "\""
            firebaseAppDistribution {
                artifactPath = "app/build/outputs/apk/debug/app-debug.apk"
            }
        }
        release {
            debuggable false
            minifyEnabled true
            signingConfig signingConfigs.release
            buildConfigField "String", "AD_MOB_KEY", "\"" + globalConfiguration["adMobKey"] + "\""
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            firebaseAppDistribution {
//                artifactType = "AAB"
//                artifactPath = "app/build/outputs/bundle/release/app-release.aab"
                artifactType = "APK"
                artifactPath = "app/build/outputs/apk/release/app-release.apk"
                releaseNotesFile = "dependencies/app-distribution-note.txt"
                groups = "home"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.0.5'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'

    // compose
    def compose_version = captureVersion(implementation('androidx.compose.ui:ui:1.0.5'))
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0'
    implementation 'androidx.activity:activity-compose:1.4.0'

    // firebase
    implementation platform('com.google.firebase:firebase-bom:29.0.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'

    // dagger-hilt
    def hilt_version = captureVersion(implementation('com.google.dagger:hilt-android:2.40.5'))
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // data store
    implementation('androidx.datastore:datastore-preferences:1.0.0')

    // lifecycle
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
}

static String captureVersion(Dependency dependency) {
    return dependency.version
}

play {
    track.set("production")
    serviceAccountCredentials.set(file("./google-play-service.json"))
    defaultToAppBundles.set(true)
    releaseStatus.set(com.github.triplet.gradle.androidpublisher.ReleaseStatus.COMPLETED)
}